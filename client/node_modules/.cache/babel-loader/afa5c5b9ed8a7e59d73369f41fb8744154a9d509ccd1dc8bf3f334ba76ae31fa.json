{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/jadyn/Bootcamp/knowledge-buddy/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { invariant } from '../jsutils/invariant.mjs';\nvar LineRegExp = /\\r\\n|[\\n\\r]/g;\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lastLineStart = 0;\n  var line = 1;\n  var _iterator = _createForOfIteratorHelper(source.body.matchAll(LineRegExp)),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var match = _step.value;\n      typeof match.index === 'number' || invariant(false);\n      if (match.index >= position) {\n        break;\n      }\n      lastLineStart = match.index + match[0].length;\n      line += 1;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return {\n    line: line,\n    column: position + 1 - lastLineStart\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}